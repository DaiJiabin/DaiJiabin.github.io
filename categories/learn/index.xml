<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Learn - Category - Jiabin&#39;s Blog</title>
        <link>https://daijiabin.github.io/categories/learn/</link>
        <description>Learn - Category - Jiabin&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 03 Feb 2021 19:14:56 &#43;0100</lastBuildDate><atom:link href="https://daijiabin.github.io/categories/learn/" rel="self" type="application/rss+xml" /><item>
    <title>Java Learning</title>
    <link>https://daijiabin.github.io/java-learning/</link>
    <pubDate>Wed, 03 Feb 2021 19:14:56 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/java-learning/</guid>
    <description><![CDATA[Java Learning ( Data Structures, mostly ) &hellip; And the greatest reason I learn it, is that I LOVE COFFEE â˜• its DS are fuxxing easy to use.
Basic Using in Java Way to write   A .java File can be compiled through javac into .class File. .java File is called Source Code, after Compling it can be deleted.
  After Compiling, execute java class_name in Terminal to run Functions in a specific class.]]></description>
</item><item>
    <title>LeetCode</title>
    <link>https://daijiabin.github.io/leetcode/</link>
    <pubDate>Mon, 25 Jan 2021 12:30:06 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/leetcode/</guid>
    <description><![CDATA[Go Through LeetCode Recursion / Binary Tree 112. Path Sum - simple recursion   Discription:
  Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum.
  A leaf is a node with no children.
    Idea:
  What kind of traverse should we use?]]></description>
</item><item>
    <title>Algorithms -- Recursion</title>
    <link>https://daijiabin.github.io/algorithms/</link>
    <pubDate>Sun, 17 Jan 2021 16:51:37 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/algorithms/</guid>
    <description><![CDATA[Ideas Recursion   What important is, NEVER JUMP INTO RECURSION.
  Actually&hellip; If it&rsquo;s possible, you can jump into it&hellip; (Well&hellip; You can take a try:) )
  In a Word, what the Blog above says, is that you must make sure that you know the very Defination of your Recursion Function, and trust that it can finish its Work perfectly.
  1. Recursion in List   Figure out what does your Function proceedure with, what kind of value will it return.]]></description>
</item><item>
    <title>Machine Learning</title>
    <link>https://daijiabin.github.io/machine-learning/</link>
    <pubDate>Fri, 18 Dec 2020 19:11:53 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/machine-learning/</guid>
    <description><![CDATA[Lecture by Andrew Ng, Coursera Basic Concepts &amp; Linear Regression Supervised Learning vs. Unsupervised Learning   Supervised Learning:
 In supervised learning, we are given a data set and already know what our correct output should look like, having the idea that there is a relationship between the input and the output.
   Training Data already has the value, which our Function should predict for a new, strange input.]]></description>
</item></channel>
</rss>
