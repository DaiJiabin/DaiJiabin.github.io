<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Jiabin&#39;s Blog</title>
        <link>https://daijiabin.github.io/posts/</link>
        <description>All Posts | Jiabin&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 22 Feb 2021 10:57:41 &#43;0100</lastBuildDate><atom:link href="https://daijiabin.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Operating System</title>
    <link>https://daijiabin.github.io/operating-system/</link>
    <pubDate>Mon, 22 Feb 2021 10:57:41 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/operating-system/</guid>
    <description><![CDATA[Operating System ]]></description>
</item><item>
    <title>Computer Networks</title>
    <link>https://daijiabin.github.io/computer-networks/</link>
    <pubDate>Mon, 22 Feb 2021 10:50:46 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/computer-networks/</guid>
    <description><![CDATA[Computer Networks   Foreword:
References:
 Videos: 2021王道计算机网络 on YouTube eBook: Google Drive Link here (Chinese)  Power Point: Google Drive Link here (Chinese)     Ch 01. System&rsquo;s Structure of Computer Networks   Definition:
A System that connects distributed and independent Computer Systems through Devices and Cables, therefore the Resources-Sharing and Information-Transportation are realized. It&rsquo;s a Combination of connected and independent Computers.
  Functions:]]></description>
</item><item>
    <title>Spring</title>
    <link>https://daijiabin.github.io/spring/</link>
    <pubDate>Fri, 19 Feb 2021 20:14:05 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/spring/</guid>
    <description><![CDATA[Spring Notes Day 01. Basic Concepts  Kernel Techs: IoC(Inversion of Control) and aop. Loose the Relationships between Modules.  IoC ( Inversion of Control )   Creation, Value-Given and Management belong to the Containers beyond Codes.
  Management:
Creation, Attributes-Given and Management of the Relationships of Objects.
  Inversion:
Transfer the Rights of Management, Creation of Objects to the Containers ( here: Spring ) beyond Codes.]]></description>
</item><item>
    <title>Java Learning</title>
    <link>https://daijiabin.github.io/java-learning/</link>
    <pubDate>Wed, 03 Feb 2021 19:14:56 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/java-learning/</guid>
    <description><![CDATA[Java Learning ( Data Structures, mostly ) &hellip; And the greatest reason I learn it, is that I LOVE COFFEE ☕ its DS are fuxxing easy to use.
Basic Using in Java Way to write   A .java File can be compiled through javac into .class File. .java File is called Source Code, after Compling it can be deleted.
  After Compiling, execute java class_name in Terminal to run Functions in a specific class.]]></description>
</item><item>
    <title>LeetCode</title>
    <link>https://daijiabin.github.io/leetcode/</link>
    <pubDate>Mon, 25 Jan 2021 12:30:06 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/leetcode/</guid>
    <description><![CDATA[Go Through LeetCode Recursion / Binary Tree 112. Path Sum - simple recursion   Discription:
  Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum.
  A leaf is a node with no children.
    Idea:
  What kind of traverse should we use?]]></description>
</item><item>
    <title>Algorithms -- Recursion</title>
    <link>https://daijiabin.github.io/algorithms/</link>
    <pubDate>Sun, 17 Jan 2021 16:51:37 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/algorithms/</guid>
    <description><![CDATA[Ideas Recursion   What important is, NEVER JUMP INTO RECURSION.
  Actually&hellip; If it&rsquo;s possible, you can jump into it&hellip; (Well&hellip; You can take a try:) )
  In a Word, what the Blog above says, is that you must make sure that you know the very Defination of your Recursion Function, and trust that it can finish its Work perfectly.
  1. Recursion in List   Figure out what does your Function proceedure with, what kind of value will it return.]]></description>
</item><item>
    <title>Machine Learning</title>
    <link>https://daijiabin.github.io/machine-learning/</link>
    <pubDate>Fri, 18 Dec 2020 19:11:53 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/machine-learning/</guid>
    <description><![CDATA[Lecture by Andrew Ng, Coursera Basic Concepts &amp; Linear Regression Supervised Learning vs. Unsupervised Learning   Supervised Learning:
 In supervised learning, we are given a data set and already know what our correct output should look like, having the idea that there is a relationship between the input and the output.
   Training Data already has the value, which our Function should predict for a new, strange input.]]></description>
</item><item>
    <title>NodeJS</title>
    <link>https://daijiabin.github.io/nodejs/</link>
    <pubDate>Fri, 18 Dec 2020 13:30:23 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/nodejs/</guid>
    <description><![CDATA[Lecture 1 What is NodeJS?   Node.js is a JavaScript runtime built on Chrome&rsquo;s V8
  Node.js uses an event-driven, non-blocking I/O model
  Blocking: When I/O processing, process waits until I/O finishes.
  Non-blocking: When I/o processing, process doesn&rsquo;t wait.
  Event-driven: i.g., Click event.
    Advantages of NodeJS  Deals well with High Concurrency and I/O intensiv  CPU Intensiv vs.]]></description>
</item><item>
    <title>TestDaF Arguments ( German / zh-CN )</title>
    <link>https://daijiabin.github.io/testdaf-reference/</link>
    <pubDate>Wed, 15 Jul 2020 00:00:00 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://daijiabin.github.io/testdaf-reference/</guid>
    <description><![CDATA[德福考试论据汇总——写作 Aber jede Medaille hat auch Kehrseite.
一、在德大学生应选择何种工作(大学生兼职)   Pro:
  通过一份与专业相关的兼职学生可以积累职业经验，以此他们可以在以后的职场上更好地维持。
Durch einen fachbezogenen Job können die Studenten Berufserfahrungen sammeln, mit denen sie sich später auf dem Arbeitsmarkt besser behaupten können.
  在做与专业相关的兼职工作的同时人不仅可以获得(erzielen)更好的收入(Gehalt)，也积累很多必将(sicherlich)使他在职场上的职业前景更加美好的经验。
Bei einem fachbezogenen Job erzielt man nicht nur ein besseres Gehalt, sondern man sammelt viele Erfahrungen, die sicherlich seine Berufsaussicht auf dem Arbeitsmarkt verbessert.
  学业一直是学生的核心工作(im Mittelpunkt stehen)。在兼职工作中，他们也应该一直思考：他们应该如何将所学的东西(Gelernte)在实习中得以转化——这仅实现在专业相关的工作。
Das Studium steht immer im Mittelpunkt für die Studenten.]]></description>
</item></channel>
</rss>
